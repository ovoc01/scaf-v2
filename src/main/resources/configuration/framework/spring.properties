file-generable=entity,service,repository,rest-controller
cli-project-generation=spring init --build ##build --description "Our first Spring Boot application"  --dependencies web,data-jpa,postgresql --group-id ##basePackage --java-version 17 ##projectName


##entity configuration
entity.imports=jakarta.persistence.Entity,jakarta.persistence.Id,jakarta.persistence.GeneratedValue,jakarta.persistence.GenerationType,jakarta.persistence.Column,jakarta.persistence.Table
entity.annotation=Entity,Table
entity.id-marks=Id
entity.column-mark=Column
entity.inheritance=none


##repository configuration
repository.imports=org.springframework.data.jpa.repository.JpaRepository,org.springframework.stereotype.Repository
repository.annotation=Repository
repository.inheritance=JpaRepository<[entityName],##primaryKeyType>

## service configuration

service.imports=java.util.List,java.util.Optional,org.springframework.stereotype.Service,org.springframework.beans.factory.annotation.Autowired
service.annotation=Service
service.inheritance=none
service.injection-annotation=Autowired
##service-methods
   public List<[entityName]> getAllEntities() {
        return [tableName]Repository.findAll();
    }


    public Optional<[entityName]> getEntityById(##primaryKeyType id) {
        return [tableName]Repository.findById(id);
    }


    public [entityName] saveEntity(EntityName entityName) {
        return [tableName]Repository.save(entityName);
    }


    public [entityName] updateEntity([entityName] [tableName]) {
        return [tableName]Repository.save([tableName]);
    }

    public void deleteEntityById(##primaryKeyType id) {
        [tableName]Repository.deleteById(id);
    }
!!service-methods


##controller configuration
rest-controller.imports=org.springframework.beans.factory.annotation.Autowired,org.springframework.web.bind.annotation.*,lombok.RequiredArgsConstructor,java.util.HasMap
rest-controller.inheritance=none
rest-controller.inheritance=none
rest-controller.annotation=RestController,RequestMapping("/[tableName]")
rest-controller.injection-annotation=Autowired
##controller-methods
    @GetMapping
    public ResponseEntity<Object> getAll[entityName]() {
        HasMap<String,Object> data = new HashMap();
        try{
            List<[entityName]>[tableName]s =  [tableName]Service.getAllEntities();
            data.put("[tableName]s",[tableName]s);
            return ResponseEntity.ok(data);
        }catch(Exception e){
            data.put("error",e.getMessage());
            return ResponseEntity.badRequest().body(data);
        }

    }

    @PostMapping
    public ResponseEntity<Object> create[entityName](@RequestBody [entityName] [tableName]){
        HasMap<String,Object> data = new HashMap();
        try{
            [tableName]Service.saveEntity([tableName]);
            data.put("message","[entityName] created successfully");
            return ResponseEntity.created().body(data);
        }catch(Exception e){
            data.put("error",e.getMessage());
            return ResponseEntity.badRequest().body(data);
        }
    }


    @PutMapping("/{id}")
    public ResponseEntity<Object> update[entityName](@PathVariable("id")##primaryKeyType id){
        HasMap<String,Object> data = new HashMap();

        try{
            //TODO
            return ResponseEntity.ok();
        }catch(Exception e){
            data.put("error",e.getMessage());
            return ResponseEntity.badRequest().body(data);
        }
    }


!!controller-methods


